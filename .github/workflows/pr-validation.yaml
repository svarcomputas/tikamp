name: Pr-Validation
permissions:
  id-token: write

on:
  pull_request:
    branches:
      - main

jobs:  
  is-changes-to-bicep:
   name: Is changes to bicep with deep 0
   runs-on: ubuntu-latest
   outputs:
    shouldDeployBicep: ${{ steps.bicepchange.outputs.bicep }}
   steps:
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - uses: dorny/paths-filter@v3
       id: bicepchange
       with:
         filters: |
           bicep:
             - '.bicep/**'
  is-changes-to-bicep1:
   name: Is changes to bicep
   runs-on: ubuntu-latest
   outputs:
     shouldDeployBicep: ${{ steps.bicepchange1.outputs.bicep }}
   steps:
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - uses: dorny/paths-filter@v3
       id: bicepchange1
       with:
         filters: |
           bicep:
             - '.bicep/**'
  printing:
    name: Printing
    runs-on: ubuntu-latest
    steps:
      - name: paste
        run: echo "${{needs.is-changes-to-bicep.outputs.shouldDeployBicep}} ${{needs.is-changes-to-bicep1.outputs.shouldDeployBicep}}" > index.md
      - name: test
        run: cat index.md
  bicep-run:
    name: bicep tun with deep 0
    runs-on: ubuntu-latest
    if: needs.is-changes-to-bicep.outputs.shouldDeployBicep == 'true'   
    steps:
      - name: print
        run: echo "deep 0"
  bicep-run1:
    name: bicep tun
    runs-on: ubuntu-latest
    if: needs.is-changes-to-bicep1.outputs.shouldDeployBicep == 'true'
    steps:
      - name: print
        run: echo "noot deep 0"
  create-migration-bundle:
    name: Create EF-migrations bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create migration bundle
        uses: ./.github/actions/create-efbundle-action
        with:
          DB_PROJECT: Tikamp.Database/Tikamp.Database.csproj
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: |
          for project in $(find . -name "*.csproj"); do
            echo "Restoring $project"
            dotnet restore "$project"
          done

      - name: Build
        run: dotnet build Tikamp.Api/Tikamp.Api.csproj -c Release --no-restore

      - name: Test
        run: |
          for testProject in $(find . -name "*Test*.csproj"); do
            echo "Testing $testProject"
            dotnet test "$testProject" -c Release --no-build --verbosity normal --filter "Category!=LongRunning"
          done

  validate-bicep:
    name: Validate Bicep Files
    runs-on: ubuntu-latest
    environment: preprod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Bicep Parameters Files
        run: |
          echo "Validating Bicep parameters files..."
          find ./.bicep -name "*.bicepparam" -exec az bicep build-params -f {} \;

      - name: Validate Bicep Files
        run: |
          echo "Validating Bicep files..."
          az bicep build -f .bicep/main.bicep;